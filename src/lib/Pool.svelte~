<script>
  import { flip } from 'svelte/animate';
  import { expoOut } from 'svelte/easing';
  import { crossfade } from 'svelte/transition';

  export let key = "key";

  const [send, receive] = crossfade({
    fallback(node, params) {
      const style = getComputedStyle(node);
      const transform = style.transform === 'none' ? '' : style.transform;
      return {
	easing: expoOut,
	css: (t) => `
           transform: ${transform} scale(${t});
           opacity: ${t}
        `
      };
    }
  });
</script>

{#each pool as item (item[key])}
  <div in:receive={{key: item.key}} out:send={{key: item.key}} animate:flip>
    <slot />
  </div>
{:else}
  <slot name="else" />
{/each}
